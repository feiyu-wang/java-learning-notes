=====================================================
流程控制语句

流程控制：语句的执行顺序

顺序结构：自上向下顺序执行

选择分支：选择性的执行某一个代码块

循环结构：程序在执行到某一个代码块中重复的执行多次。

条件分支： if-else switch 

key的数据类型： char byte short int  enum String ---直接转换成if来解析

枚举类型的数据定义：  enum----特殊数据类型

enum 枚举名
{
   // 枚举中可以列举出来的所有的数据
}

使用枚举

枚举名  枚举元素名字（自定义） = 枚举名.枚举中的数据

int key = 9;
switch(key)----------------固定的范围内可列举的数据
{
   case 1: 执行语句1;break; // break 语句的作用：执行到此处程序在switch代码块中停止
   case 2: 执行语句2;
   case 2: 执行语句2;
   case 2: 执行语句2;
   case 2: 执行语句2;
   case后的数值不能重复
   case 2: 执行语句2;
   case 2: 执行语句2;
   case 2: 执行语句2;
   case 2: 执行语句2;
   case 2: 执行语句2;
   default:
}

循环语句：  

1 语法结构 ：

  while(判定表达式) // 判定表达式决定循环的执行次数
  {
      // 循环体
      // 计数器的变更
  }

  do
  {
  }while(判定表达式)


  for(表达式1;表达式2;表达式3)
  {
  }

2 循环的执行

3 while循环与for循环相互转换

break语句 1 case后的break结束整个选项   2 循环体中的break,结束整个循环

continue语句  跳过本次循环中continue语句的代码不执行，直接进入下一次循环

4 死循环：

  while(true)
  {
    break;
  }

  for(;;)
  {
    break;
  }

5 不同流程控制结构的嵌套

 for()
 {
    if()
    {
        switch()
	{

	}
    }
 }

 for()
 {
    while()
    {
       if()
       {
       }
    }
 }

 for()
 {
    for()
    {
      
    }
 }

 业务题：用户名密码登录验证。只能验证一次
 　　　　程序改成：重复的输入用户名和密码
 　　　　如果用户名或者密码输入的不正确，重新输入