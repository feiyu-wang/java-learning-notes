=============================================================
复习：

基本数据类型：8种  ， 引用 3种

必须掌握： 

（1）每一种基本数据类型的关键字 
（2）每一种基本数据类型占内存大小，字节和二进制位
（3）每一种基本数据类型的数据范围，数据精度（小数点位数）

整数： 

 byte   字节  1个字节   8个二进制位   -128~127
 
 short  短整型 2个字节                -32768~32767 上万 

 int    整型  4个字节       最大值：Integer.MAX_VALUE   最小值：Integer.MIN_VALUE    整型数据的封装类： Integer

 long   长整型 8个字节      最大值： Long.MAX_VALUE 最小值：Long.MIN_VALUE  (必须后缀L)

字符型： 

 char  2个字节   数据范围   0~2的16-1  unicode编码  
 
 'h'-----------整数值   

 '贾' -------------整数值

浮点型：

 单精度  float  4个字节   Float.MAX_VALUE  Float.MIN_VALUE   数据精度 ：整数为0，小数点后8。整数不为0，小数点后6
 后缀f(不加后缀默认数据就是double)
  
 双精度  double 8个字节  Double.MAX_VALUE Double.MIN_VALUE   数据精度：最多小数点后17位可见


数据精度高低排序： 

 byte<short<int<float<long<double

 --------char------

 不同类型的数据相互转换：

 =====> 无精度损失 （隐式转换）  -----> 有精度损失（强转）

 byte---->char----->short====>int (低精度转向高精度无精度损失) 

 int------>short (高精度转低精度有精度损失)

 byte,char,short =======>int ======>float

 float----->int

 long======>double 

 double---->long 

 防止精度损失，强制类型转换

 强制转换可能会发生值得损失。
 
 强转中的运算： 自动升精度和不升精度


 2  从键盘录入信息-------存储到计算机----文本扫描器---变量中
 
   1 获取文本扫描器

   java源文件第一句加 import java.util.Scanner;---保证能够使用Scanner类

   2 创建文本扫描器

   Scanner input  = new Scanner(System.in);

   3 扫描器扫描数据

   不同类型扫描方法不相同

   姓名 ---String --------------next() /nextLine()

   年龄 ----int ----------------nextInt() 
       -----byte ---------------nextByte()
       -----short --------------nextShort()
   性别
       ----boolean ---------nextBoolean()

    薪资待遇 

       ----double---------nextDouble()

    血型 
      -----String---------next()---char  
================================================================================
运算符

1 算数运算符

  + - *（乘法） /(整除)  %(取余)  --（自减） ++（自加）
  
  练习： 键盘输入一个三位数（整数或者字符串），在控制台打印输出百位数字，十位数字，个位的数字

2 赋值运算符
  = += -= /= *= 

3 关系运算符(比较运算)

 > < >= <= ==(是否相等) !=(是否不相等)

 俩个具体变量的值进行比较，比较之后的真或者假（布尔值）---布尔表达式 

4 逻辑运算符

 &(逻辑与) |(逻辑或)  !(逻辑非) ----逻辑运算符的结果都是布尔值

 int a = 10;

 int b = 20;

 a>b和a%2==0俩个同时成立的时候，判定条件是真的

 逻辑与    表达式1和表达式2 ，俩个表达式同时成立，这个时候整个判定条件才能成立，
           只要俩个表达式中有一个是false,整个的判定条件就不能成立

 逻辑或   表达式1或者表达式2，只要有一个表达式成立（true）,整个表达式就成立

 逻辑非   非表达式1 ，非真就是假，非假就是真

 特殊情况： 短路与（&&） 短路或(||)

 短路与：表达式1和表达式2 ，如果表达式1已经判定为false,整个表达式的结果就是false
        
	 表达式2不做运算
 短路或：表达式1和表达式2，如果表达式1已经判定为true,整个表达式的结果就是true

         表达式2不做运算

5 位运算符

6 条件运算符

 =======================================
 作业：
１      硬性标准：　代码写３遍

2       int a1=10,a2=20;
	boolean flag1=a1++>10&&--a2<20
	boolean flag2=a1++>10||--a2<20;
	System.out.println(flag1);
	System.out.println(flag2);
	System.out.println(a1);
	System.out.println(a2)

	写出执行结果？

3 向键盘输入一个整数，输出此整数的二进制字符串表示方式，并将此字符串分解成单个单词


 

